<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>m_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>m_idle</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize variable
grav = .25;
hsp = 0;
vsp = 0;
jumpspeed = 7;
movespeed = 3;

image_speed = .1

//testing - no effect
xspeed = 0;
yspeed = 0;
precision = 1; //1 is fine in most cases, 0.1 can be used but will need a better CPU to handle

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Border

x = max(x,5);
x= min(x,room_width);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///movement

//get player input
key_right = keyboard_check(vk_right);
key_left = -keyboard_check(vk_left);
key_jump = keyboard_check_pressed(vk_space);
key_run = keyboard_check_pressed(vk_lshift);
//react to imput
move = key_left + key_right;
hsp = move * movespeed;
if (vsp &lt; 10) vsp += grav;

if (place_meeting(x,y+1,obj_floor_2))
{
    vsp = key_jump * -jumpspeed
}

if (key_jump) &amp;&amp; (place_meeting(x+1,y,obj_floor_2) || place_meeting(x-1,y,obj_floor_2))
{
    vsp = -jumpspeed;
}


//horizontal collision
if (place_meeting(x+hsp,y,obj_floor_2))
{
    while(!place_meeting(x+sign(hsp),y,obj_floor_2))
    {
        x += sign(hsp);
    }
    hsp = 0;
}
x += hsp;

//verticle collision
if (place_meeting(x,y+vsp,obj_floor_2))
{
    while(!place_meeting(x,y+sign(vsp),obj_floor_2))
    {
        y += sign(vsp);
    }
    vsp = 0;
}
y += vsp;

//experimental


//animations
if (move!=0) image_xscale = move;
if (place_meeting (x,y+1,obj_floor_2))
{
    if (move!=0) sprite_index = m_walk; else sprite_index = m_idle;
}
else
{
    if (vsp &lt; 0) sprite_index = m_jump; else sprite_index = m_falling
}

    if ( (hsp=0) &amp;&amp; keyboard_check(vk_alt) ) sprite_index = m_attack

//testing - no effect on brick
for(var i = 0; i &lt; abs(xspeed); i+= precision){
    var dx = sign(xspeed)/precision;
    if (place_free(x+dx, y)){
        x+= dx;
    } else {
        xspeed = 0;
    }
}
for(var i = 0; i &lt; abs(yspeed); i+= precision){
    var dy = sign(yspeed)/precision;
    if (place_free(x, y+dy)){
        y+= dy;
    } else {
        yspeed = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>2</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>1</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>-1</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
